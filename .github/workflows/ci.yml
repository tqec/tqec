name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - name: Install dependencies
        run: python -m pip install --upgrade pip pre-commit
      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  build-and-test-python:
    runs-on: ubuntu-latest
    needs: pre-commit-ci
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      # Checkout and install TQEC
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r requirements-dev.txt
          python -m pip install pytest mypy
      - name: Build
        run: python -m pip install -e .
      # Type check the code base.
      - name: Mypy type checking
        run: mypy src/tqec/
      # Perform the full tests (including slow ones) when pushing on main.
      - name: Complete tests
        if: github.ref == 'refs/heads/main'
        run: python -m pytest $(git ls-files '*_test.py')
      # Only perform quick tests when pushing on a PR.
      - name: Partial tests
        if: github.ref != 'refs/heads/main'
        run: python -m pytest $(git ls-files '*_test.py') -m "not slow"

  coverage-python:
    runs-on: ubuntu-latest
    needs: pre-commit-ci
    # Only compute coverage in PRs.
    if: github.event_name == 'pull_request'
    steps:
      # Checkout and install TQEC
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - name: Install dependencies and tqec package
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e '.[test]'
          python -m pip install pytest pytest-cov
      # Only perform quick tests when pushing on a PR
      - name: Code health - format
        uses: astral-sh/ruff-action@v3
        with:
          args: "format --check --diff"
      - name: Code health - lint
        run: ruff check --fix
      - name: Code coverage for partial tests
        if: github.ref != 'refs/heads/main'
        run: |
          python -m pytest --cov=tqec --cov-report=xml:coverage.xml --cov-report term-missing:skip-covered $(git ls-files '*_test.py') -m "not slow"
      # Print code coverage if in PR
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "50 75"
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: code-coverage
          recreate: true
          path: code-coverage-results.md
        continue-on-error: true
